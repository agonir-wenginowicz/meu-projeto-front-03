const SPA_CONTAINER_ID = 'spa-content';
const CONTENT_PATH = 'content/';

const loadPageContent = async (page) => {
    const container = document.getElementById(SPA_CONTAINER_ID);
    if (!container) return;

    try {
        // Manipula√ß√£o do DOM: Mostra um estado de carregamento
        container.innerHTML = '<section class="hero"><h2 id="hero-title">Carregando...</h2></section>';
        
        // 1. Fetch para buscar o conte√∫do HTML da "p√°gina"
        const response = await fetch(`${CONTENT_PATH}${page}`);
        if (!response.ok) {
            throw new Error(`Erro ao carregar a p√°gina: ${response.statusText}`);
        }
        
        const html = await response.text();
        
        // 2. Manipula√ß√£o do DOM: Injeta o novo conte√∫do
        container.innerHTML = html;
        
        // 3. Execu√ß√£o de fun√ß√µes espec√≠ficas ap√≥s carregar o conte√∫do
        if (page === 'projetos.html') {
            // Se for a p√°gina de projetos, renderiza os cards din√¢micos
            renderProjects(); 
        } else if (page === 'cadastro.html') {
            // Se for a p√°gina de cadastro, configura o listener de formul√°rio
            setupFormListener();
        }

    } catch (error) {
        console.error("Falha no SPA:", error);
        container.innerHTML = '<section class="hero"><h2 id="hero-title" class="alert alert-error">Erro ao carregar o conte√∫do.</h2></section>';
    }
};

const handleNavigation = (event) => {
    // 1. Tente encontrar o link com a classe nav-link ou o link mais pr√≥ximo
    const target = event.target.closest('a'); 

    // 2. Garanta que √© um link que queremos interceptar (e que n√£o √© um link externo ou #)
    if (target && target.classList.contains('nav-link')) { 
        
        // üîë Adicione este log para confirmar que a INTERCEPTA√á√ÉO est√° funcionando
        console.log(`[SPA Nav] Interceptado link com data-path: ${target.getAttribute('data-path')}`);
        
        event.preventDefault(); // Impede o envio padr√£o que causa o "Not Found"

        const path = target.getAttribute('data-path');
        
        // Atualiza a URL do navegador
        window.history.pushState({ path: path }, '', `/${path}`);
        
        // Carrega o conte√∫do da nova "p√°gina"
        loadPageContent(path);
        
        // Opcional: Fecha o menu mobile se estiver aberto
        const menuToggle = document.getElementById('menu-toggle');
        if (menuToggle && menuToggle.checked) {
            menuToggle.checked = false; 
        }
    }
};

// Inicializa√ß√£o: Carrega o conte√∫do da p√°gina inicial ao abrir o site
document.addEventListener('DOMContentLoaded', () => {
    // Configura o ouvinte de cliques para toda a navega√ß√£o
    document.querySelector('.nav-menu').addEventListener('click', handleNavigation);
    
    // Carrega a p√°gina inicial ou o caminho atual da URL
    const initialPath = window.location.pathname.endsWith('.html') ? window.location.pathname.split('/').pop() : 'index.html';
    loadPageContent(initialPath);
    
    // Listener para o bot√£o "voltar" do navegador
    window.addEventListener('popstate', (event) => {
        const popPath = event.state ? event.state.path : 'index.html';
        loadPageContent(popPath);
    });

    console.log("SPA Iniciado.");
});
